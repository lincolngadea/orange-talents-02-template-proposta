spring:
  application:
    name: nosso-cartao-propostas
  output:
    ansi:
      enabled: ALWAYS

#Conexão com o banco de dados
  datasource:
    hikari:
      connectionTimeout: 20000
      maximumPoolSize: 5
      minimum-idle: 10
      maximum-pool-size: 20
    plataform: postgres
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/${DB_DATABASE:keycloak}
    username: ${DB_USER:keycloak}
    password: ${DB_PASS:password}
  jpa:
    hibernate:
      ddl-auto: create

#Configuração de Segurança
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/cartao-proposta}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/cartao-proposta/protocol/openid-connect/certs}
  auth:
    client_id: aplicacao-proposta
    client_secret: 15ead7cd-23d2-418c-9ece-cd175049e2ac
    uri: ${KEYCLOAK_SUPPLIER:http://localhost:18080/auth/realms/propostas/protocol/openid-connect/token}
    grant_type: password
    scope: scopo-proposta

#Variáveis de ambiente para o Feign
uri_analise_financeira: ${URI_ANALISE:http://localhost:9999/}
uri_cartao: ${URI_CARTAO:http://localhost:8888/}

feign:
  client:
    config:
      default:
        loggerLevel: full
        connectTimeout: 5000
        readTimeout: 5000
logging:
  level:
    io:
      zup:
        orange:
          propostaspring:
            registroCartao:
              bloqueios:
                BloqueioController: DEBUG
                CartaoGatewy: DEBUG
                AnaliseFinanceiraDeClientes: DEBUG

#Actuators e Prometheus
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
    prometheus:
      enabled: true